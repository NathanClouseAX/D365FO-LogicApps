{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vulnerabilityAssessments_Default_storageContainerPath": {
            "type": "SecureString"
        },
        "workflows_order_name": {
            "defaultValue": "order",
            "type": "String"
        },
        "connections_teams_name": {
            "defaultValue": "teams",
            "type": "String"
        },
        "connections_teams_1_name": {
            "defaultValue": "teams-1",
            "type": "String"
        },
        "workflows_customer_name": {
            "defaultValue": "customer",
            "type": "String"
        },
        "workflows_ax2d365fo_name": {
            "defaultValue": "ax2d365fo",
            "type": "String"
        },
        "connections_azureblob_name": {
            "defaultValue": "azureblob",
            "type": "String"
        },
        "connections_office365_name": {
            "defaultValue": "office365",
            "type": "String"
        },
        "workflows_itemcreate_name": {
            "defaultValue": "itemcreate",
            "type": "String"
        },
        "workflows_logic_7643_name": {
            "defaultValue": "logic-7643",
            "type": "String"
        },
        "workflows_logic_7644_name": {
            "defaultValue": "logic-7644",
            "type": "String"
        },
        "workflows_logic_7645_name": {
            "defaultValue": "logic-7645",
            "type": "String"
        },
        "workflows_logic_7646_name": {
            "defaultValue": "logic-7646",
            "type": "String"
        },
        "workflows_logic_7647_name": {
            "defaultValue": "logic-7647",
            "type": "String"
        },
        "workflows_logic_7649_name": {
            "defaultValue": "logic-7649",
            "type": "String"
        },
        "workflows_logic_7650_name": {
            "defaultValue": "logic-7650",
            "type": "String"
        },
        "workflows_logic_7651_name": {
            "defaultValue": "logic-7651",
            "type": "String"
        },
        "workflows_logic_7667_name": {
            "defaultValue": "logic-7667",
            "type": "String"
        },
        "connections_dynamicsax_name": {
            "defaultValue": "dynamicsax",
            "type": "String"
        },
        "connections_servicebus_name": {
            "defaultValue": "servicebus",
            "type": "String"
        },
        "workflows_blob2finops_name": {
            "defaultValue": "blob2finops",
            "type": "String"
        },
        "connections_azureblob_1_name": {
            "defaultValue": "azureblob-1",
            "type": "String"
        },
        "connections_office365_1_name": {
            "defaultValue": "office365-1",
            "type": "String"
        },
        "workflows_logic_7646_a_name": {
            "defaultValue": "logic-7646-a",
            "type": "String"
        },
        "workflows_logic_7646_b_name": {
            "defaultValue": "logic-7646-b",
            "type": "String"
        },
        "connections_dynamicsax_1_name": {
            "defaultValue": "dynamicsax-1",
            "type": "String"
        },
        "connections_dynamicsax_2_name": {
            "defaultValue": "dynamicsax-2",
            "type": "String"
        },
        "connections_servicebus_1_name": {
            "defaultValue": "servicebus-1",
            "type": "String"
        },
        "workflows_PowerLCS_Auth_name": {
            "defaultValue": "PowerLCS-Auth",
            "type": "String"
        },
        "workflows_d365_teams_http_name": {
            "defaultValue": "d365-teams-http",
            "type": "String"
        },
        "workflows_recurringapitest_name": {
            "defaultValue": "recurringapitest",
            "type": "String"
        },
        "connections_azuredatafactory_name": {
            "defaultValue": "azuredatafactory",
            "type": "String"
        },
        "workspaces_envsynapsedemo_name": {
            "defaultValue": "envsynapsedemo",
            "type": "String"
        },
        "connections_commondataservice_name": {
            "defaultValue": "commondataservice",
            "type": "String"
        },
        "connections_commondataservice_1_name": {
            "defaultValue": "commondataservice-1",
            "type": "String"
        },
        "vaults_demo1_NathanClouseAX_name": {
            "defaultValue": "demo1-NathanClouseAX",
            "type": "String"
        },
        "namespaces_envistasalesbus_name": {
            "defaultValue": "envistasalesbus",
            "type": "String"
        },
        "virtualMachines_DrupalCommerce_name": {
            "defaultValue": "DrupalCommerce",
            "type": "String"
        },
        "vaults_envista_sales_demo_key_name": {
            "defaultValue": "envista-sales-demo-key",
            "type": "String"
        },
        "namespaces_demo1_servicebus_name": {
            "defaultValue": "demo1-servicebus",
            "type": "String"
        },
        "virtualNetworks_tech_sales_rg_vnet_name": {
            "defaultValue": "tech_sales_rg-vnet",
            "type": "String"
        },
        "publicIPAddresses_DrupalCommerce_ip_name": {
            "defaultValue": "DrupalCommerce-ip",
            "type": "String"
        },
        "networkInterfaces_drupalcommerce9_z1_name": {
            "defaultValue": "drupalcommerce9_z1",
            "type": "String"
        },
        "networkSecurityGroups_DrupalCommerce_nsg_name": {
            "defaultValue": "DrupalCommerce-nsg",
            "type": "String"
        },
        "storageAccounts_envistasalesdemodatalake_name": {
            "defaultValue": "envistasalesdemodatalake",
            "type": "String"
        },
        "workflows_PowerLCS_HandleLCSOperationCreate_name": {
            "defaultValue": "PowerLCS-HandleLCSOperationCreate",
            "type": "String"
        },
        "userAssignedIdentities_RestAPITest1_name": {
            "defaultValue": "RestAPITest1",
            "type": "String"
        },
        "connections_office365_externalid": {
            "defaultValue": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/resourceGroups/finance-integrations-rg/providers/Microsoft.Web/connections/office365",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2022-11-01",
            "name": "[parameters('vaults_demo1_NathanClouseAX_name')]",
            "location": "eastus",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "ipRules": [
                        {
                            "value": "97.70.124.14/32"
                        }
                    ],
                    "virtualNetworkRules": []
                },
                "accessPolicies": [
                    {
                        "tenantId": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                        "objectId": "8cef2679-35de-4422-b8cb-c69155b58feb",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "GetRotationPolicy",
                                "SetRotationPolicy",
                                "Rotate"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    },
                    {
                        "tenantId": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                        "objectId": "629b04c6-80d0-4085-ac0d-d31320268924",
                        "permissions": {
                            "certificates": [],
                            "keys": [],
                            "secrets": [
                                "Get",
                                "List"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "vaultUri": "https://demo1-nathanclouseax.vault.azure.net/",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2022-11-01",
            "name": "[parameters('vaults_envista_sales_demo_key_name')]",
            "location": "eastus",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                "accessPolicies": [
                    {
                        "tenantId": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                        "objectId": "8cef2679-35de-4422-b8cb-c69155b58feb",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "GetRotationPolicy",
                                "SetRotationPolicy",
                                "Rotate"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    },
                    {
                        "tenantId": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                        "objectId": "cd05933f-b1df-4426-b352-37d6196845fa",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List"
                            ],
                            "secrets": [
                                "Get",
                                "List"
                            ],
                            "certificates": [
                                "Get",
                                "List"
                            ]
                        }
                    },
                    {
                        "tenantId": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                        "objectId": "6c5315d9-3b8c-4cf4-aa04-c75e5e30aafc",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "Get",
                                "List"
                            ],
                            "certificates": []
                        }
                    },
                    {
                        "tenantId": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                        "objectId": "b51f9c39-7425-4c95-819d-d6432bc84050",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "get",
                                "list"
                            ],
                            "certificates": []
                        }
                    },
                    {
                        "tenantId": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                        "objectId": "91acff23-88c8-49fe-979e-871eafec8dbb",
                        "permissions": {
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers",
                                "Purge"
                            ],
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "GetRotationPolicy",
                                "SetRotationPolicy",
                                "Rotate",
                                "Encrypt",
                                "Decrypt",
                                "UnwrapKey",
                                "WrapKey",
                                "Verify",
                                "Sign",
                                "Purge",
                                "Release"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "Purge"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "vaultUri": "[concat('https://', parameters('vaults_envista_sales_demo_key_name'), '.vault.azure.net/')]",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_logic_7646_a_name')]",
            "location": "eastus",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {}
                        }
                    },
                    "actions": {
                        "Response": {
                            "runAfter": {},
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_logic_7646_b_name')]",
            "location": "eastus",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {}
                        }
                    },
                    "actions": {
                        "Response": {
                            "runAfter": {},
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_PowerLCS_Auth_name')]",
            "location": "centralus",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "HTTP": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "body": "client_id=f423fce0-5987-44d4-bb86-176fbd0c5ca9&scope=https://lcsapi.lcs.dynamics.com//.default&username=testasdf@atomicax.com&password=Coldsteel_55!!&grant_type=password",
                                "headers": {
                                    "Content-Type": "application/x-www-form-urlencoded"
                                },
                                "method": "POST",
                                "uri": "https://login.microsoftonline.com/atomicax.com/oauth2/v2.0/token"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_recurringapitest_name')]",
            "location": "centralus",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "HTTP": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://envista-sales-demo.sandbox.operations.dynamics.com/",
                                    "authority": "https://login.microsoftonline.com",
                                    "clientId": "134573a2-4e29-486b-9f0a-708b7b2eb5c8",
                                    "secret": "D9v8Q~pAZfCuRILAKOmPAi8aJ.WbwVIhn.AMQbCf",
                                    "tenant": "envistacorp.com",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "body": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Document>\n\t<SALESORDERHEADERV2ENTITY>\n\t\t<CUSTOMERSORDERREFERENCE>Drupal Order 1</CUSTOMERSORDERREFERENCE>\n\t\t<DELIVERYADDRESSCITY>detroit</DELIVERYADDRESSCITY>\n\t\t<DELIVERYADDRESSCOUNTRYREGIONID>USA</DELIVERYADDRESSCOUNTRYREGIONID>\n\t\t<DELIVERYADDRESSCOUNTRYREGIONISOCODE>US</DELIVERYADDRESSCOUNTRYREGIONISOCODE>\n\t\t<DELIVERYADDRESSSTATEID>MI</DELIVERYADDRESSSTATEID>\n\t\t<DELIVERYADDRESSSTREET>123 main st</DELIVERYADDRESSSTREET>\n\t\t<DELIVERYADDRESSZIPCODE>48336</DELIVERYADDRESSZIPCODE>\n\t\t<DELIVERYMODECODE>40</DELIVERYMODECODE>\n\t\t<DELIVERYTERMSCODE>FOB</DELIVERYTERMSCODE>\n\t\t<EMAIL>nathan.clouse@gmail.com</EMAIL>\n\t\t<InventSiteId>2</InventSiteId>\n\t\t<InventLocationid>21</InventLocationid>\n\t\t<INVOICECUSTOMERACCOUNTNUMBER>000006</INVOICECUSTOMERACCOUNTNUMBER>\n\t\t<ORDERINGCUSTOMERACCOUNTNUMBER>000006</ORDERINGCUSTOMERACCOUNTNUMBER>\n\t\t<SALESORDERLINEV2ENTITY>\n\t\t\t<ITEMNUMBER>1000</ITEMNUMBER>\n\t\t\t<LINEAMOUNT>249.990000</LINEAMOUNT>\n\t\t\t<ORDEREDSALESQUANTITY>1.00</ORDEREDSALESQUANTITY>\n\t\t\t<SALESPRICE>249.990000</SALESPRICE>\n\t\t\t<SALESPRICEQUANTITY>1.000000000000</SALESPRICEQUANTITY>\n\t\t</SALESORDERLINEV2ENTITY>\n\t</SALESORDERHEADERV2ENTITY>\n</Document>\t\t\t\n",
                                "method": "POST",
                                "uri": "https://envista-sales-demo.sandbox.operations.dynamics.com/api/connector/enqueue/%7BB3525C35-37CD-491E-9B11-D6B94923F2C1%7D?entity=Sales%20orders%20composite%20V3"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2023-01-31",
            "name": "[parameters('userAssignedIdentities_RestAPITest1_name')]",
            "location": "eastus"
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-07-01",
            "name": "[parameters('publicIPAddresses_DrupalCommerce_ip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1"
            ],
            "properties": {
                "ipAddress": "20.55.110.182",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2022-10-01-preview",
            "name": "[parameters('namespaces_demo1_servicebus_name')]",
            "location": "East US 2",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "properties": {
                "premiumMessagingPartitions": 0,
                "minimumTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "disableLocalAuth": false,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2022-10-01-preview",
            "name": "[parameters('namespaces_envistasalesbus_name')]",
            "location": "East US 2",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "properties": {
                "premiumMessagingPartitions": 0,
                "minimumTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "disableLocalAuth": false,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-09-01",
            "name": "[parameters('storageAccounts_envistasalesdemodatalake_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "isSftpEnabled": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "Azure Blob Test",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "createdTime": "2022-10-07T18:23:15.5417612Z",
                "changedTime": "2023-03-09T16:30:55.9191922Z",
                "api": {
                    "name": "[parameters('connections_azureblob_name')]",
                    "displayName": "Azure Blob Storage",
                    "description": "Microsoft Azure Storage provides a massively scalable, durable, and highly available storage for data on the cloud, and serves as the data storage solution for modern applications. Connect to Blob Storage to perform various operations such as create, update, get and delete on blobs in your Azure Storage account.",
                    "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1621/1.0.1621.3191/', parameters('connections_azureblob_name'), '/icon.png')]",
                    "brandColor": "#804998",
                    "id": "[concat('/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/', parameters('connections_azureblob_name'))]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/resourceGroups/tech_sales_rg/providers/Microsoft.Web/connections/', parameters('connections_azureblob_name'), '/extensions/proxy/testconnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_1_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "envistasalesdemodatalake",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "createdTime": "2022-10-07T18:28:22.7583431Z",
                "changedTime": "2022-10-07T18:28:22.7583431Z",
                "api": {
                    "name": "azureblob",
                    "displayName": "Azure Blob Storage",
                    "description": "Microsoft Azure Storage provides a massively scalable, durable, and highly available storage for data on the cloud, and serves as the data storage solution for modern applications. Connect to Blob Storage to perform various operations such as create, update, get and delete on blobs in your Azure Storage account.",
                    "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1621/1.0.1621.3191/azureblob/icon.png",
                    "brandColor": "#804998",
                    "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/azureblob",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/resourceGroups/tech_sales_rg/providers/Microsoft.Web/connections/', parameters('connections_azureblob_1_name'), '/extensions/proxy/testconnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azuredatafactory_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "afischer@envistacorp.com",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {
                    "token:TenantId": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                    "token:grantType": "code"
                },
                "createdTime": "2022-10-10T19:44:15.1133948Z",
                "changedTime": "2023-03-05T15:50:22.8572836Z",
                "api": {
                    "name": "[parameters('connections_azuredatafactory_name')]",
                    "displayName": "Azure Data Factory",
                    "description": "Azure Data Factory is a hybrid data integration service that allows you to create, schedule and orchestrate your ETL/ELT workflows at scale wherever your data lives, in cloud or self-hosted network.",
                    "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1515/1.0.1515.2556/', parameters('connections_azuredatafactory_name'), '/icon.png')]",
                    "brandColor": "#24A9E0",
                    "id": "[concat('/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/', parameters('connections_azuredatafactory_name'))]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_commondataservice_name')]",
            "location": "centralus",
            "kind": "V1",
            "properties": {
                "displayName": "nclouse@envistacorp.com",
                "statuses": [
                    {
                        "status": "Error",
                        "target": "token",
                        "error": {}
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {
                    "token:grantType": "code"
                },
                "createdTime": "2022-11-18T18:03:50.4679174Z",
                "changedTime": "2023-02-05T19:17:54.1576056Z",
                "api": {
                    "name": "[parameters('connections_commondataservice_name')]",
                    "displayName": "Microsoft Dataverse (legacy)",
                    "description": "Provides access to the environment database in Microsoft Dataverse.",
                    "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1619/1.0.1619.3185/', parameters('connections_commondataservice_name'), '/icon-la.png')]",
                    "brandColor": "#637080",
                    "id": "[concat('/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/centralus/managedApis/', parameters('connections_commondataservice_name'))]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_commondataservice_1_name')]",
            "location": "northcentralus",
            "kind": "V1",
            "properties": {
                "displayName": "nclouse@envistacorp.com",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {
                    "token:grantType": "code"
                },
                "createdTime": "2023-02-21T01:13:30.3205239Z",
                "changedTime": "2023-03-08T08:26:43.780482Z",
                "api": {
                    "name": "commondataservice",
                    "displayName": "Microsoft Dataverse (legacy)",
                    "description": "Provides access to the environment database in Microsoft Dataverse.",
                    "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1619/1.0.1619.3185/commondataservice/icon-la.png",
                    "brandColor": "#637080",
                    "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/northcentralus/managedApis/commondataservice",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_dynamicsax_name')]",
            "location": "centralus",
            "kind": "V1",
            "properties": {
                "displayName": "d365-conn",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {
                    "token:clientId": "134573a2-4e29-486b-9f0a-708b7b2eb5c8",
                    "token:TenantId": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                    "token:grantType": "client_credentials"
                },
                "createdTime": "2022-10-05T17:04:51.8678124Z",
                "changedTime": "2023-03-09T04:46:56.4074125Z",
                "api": {
                    "name": "[parameters('connections_dynamicsax_name')]",
                    "displayName": "Fin & Ops Apps (Dynamics 365)",
                    "description": "Fin & Ops Apps (Dynamics 365) connector provides access to data entities.",
                    "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1613/1.0.1613.3125/', parameters('connections_dynamicsax_name'), '/icon.png')]",
                    "brandColor": "#4A356F",
                    "id": "[concat('/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/centralus/managedApis/', parameters('connections_dynamicsax_name'))]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_dynamicsax_1_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "gkaspar@envistacorp.com",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {
                    "token:grantType": "code"
                },
                "createdTime": "2023-02-16T20:17:19.3657437Z",
                "changedTime": "2023-03-04T15:52:27.8791926Z",
                "api": {
                    "name": "dynamicsax",
                    "displayName": "Fin & Ops Apps (Dynamics 365)",
                    "description": "Fin & Ops Apps (Dynamics 365) connector provides access to data entities.",
                    "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1613/1.0.1613.3125/dynamicsax/icon.png",
                    "brandColor": "#4A356F",
                    "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/dynamicsax",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_dynamicsax_2_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "conn-sales-demo",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {
                    "token:clientId": "134573a2-4e29-486b-9f0a-708b7b2eb5c8",
                    "token:TenantId": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                    "token:grantType": "client_credentials"
                },
                "createdTime": "2023-02-16T20:40:47.3072345Z",
                "changedTime": "2023-03-08T20:37:46.0176373Z",
                "api": {
                    "name": "dynamicsax",
                    "displayName": "Fin & Ops Apps (Dynamics 365)",
                    "description": "Fin & Ops Apps (Dynamics 365) connector provides access to data entities.",
                    "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1613/1.0.1613.3125/dynamicsax/icon.png",
                    "brandColor": "#4A356F",
                    "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/dynamicsax",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_office365_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "afischer@envistacorp.com",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {},
                "createdTime": "2022-10-07T18:23:33.3334903Z",
                "changedTime": "2023-03-07T22:24:10.8891643Z",
                "api": {
                    "name": "[parameters('connections_office365_name')]",
                    "displayName": "Office 365 Outlook",
                    "description": "Microsoft Office 365 is a cloud-based service that is designed to help meet your organization's needs for robust security, reliability, and user productivity.",
                    "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1618/1.0.1618.3179/', parameters('connections_office365_name'), '/icon.png')]",
                    "brandColor": "#0078D4",
                    "id": "[concat('/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/', parameters('connections_office365_name'))]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/resourceGroups/tech_sales_rg/providers/Microsoft.Web/connections/', parameters('connections_office365_name'), '/extensions/proxy/testconnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_office365_1_name')]",
            "location": "centralus",
            "kind": "V1",
            "properties": {
                "displayName": "nclouse@envistacorp.com",
                "statuses": [
                    {
                        "status": "Error",
                        "target": "token",
                        "error": {}
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {},
                "createdTime": "2022-11-18T18:09:37.6088349Z",
                "changedTime": "2023-02-16T21:20:45.2310007Z",
                "api": {
                    "name": "office365",
                    "displayName": "Office 365 Outlook",
                    "description": "Microsoft Office 365 is a cloud-based service that is designed to help meet your organization's needs for robust security, reliability, and user productivity.",
                    "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1618/1.0.1618.3179/office365/icon.png",
                    "brandColor": "#0078D4",
                    "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/centralus/managedApis/office365",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/resourceGroups/tech_sales_rg/providers/Microsoft.Web/connections/', parameters('connections_office365_1_name'), '/extensions/proxy/testconnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_servicebus_name')]",
            "location": "northcentralus",
            "kind": "V1",
            "properties": {
                "displayName": "item create queue",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "createdTime": "2022-10-05T02:41:52.5002737Z",
                "changedTime": "2022-10-05T02:41:52.5002737Z",
                "api": {
                    "name": "[parameters('connections_servicebus_name')]",
                    "displayName": "Service Bus",
                    "description": "Connect to Azure Service Bus to send and receive messages. You can perform actions such as send to queue, send to topic, receive from queue, receive from subscription, etc.",
                    "iconUri": "[concat('https://connectoricons-prod.azureedge.net/u/juanq/releases/v1.0.1609-localization/1.0.1609.3085/', parameters('connections_servicebus_name'), '/icon.png')]",
                    "brandColor": "#c4d5ff",
                    "id": "[concat('/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/northcentralus/managedApis/', parameters('connections_servicebus_name'))]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_servicebus_1_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "sb-logic-conn",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "createdTime": "2023-02-22T20:24:16.494684Z",
                "changedTime": "2023-03-07T22:52:49.0926343Z",
                "api": {
                    "name": "servicebus",
                    "displayName": "Service Bus",
                    "description": "Connect to Azure Service Bus to send and receive messages. You can perform actions such as send to queue, send to topic, receive from queue, receive from subscription, etc.",
                    "iconUri": "https://connectoricons-prod.azureedge.net/u/juanq/releases/v1.0.1609-localization/1.0.1609.3085/servicebus/icon.png",
                    "brandColor": "#c4d5ff",
                    "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/servicebus",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_teams_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "gkaspar@envistacorp.com",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {},
                "createdTime": "2023-02-16T22:57:14.5419749Z",
                "changedTime": "2023-03-08T20:37:27.7770865Z",
                "api": {
                    "name": "[parameters('connections_teams_name')]",
                    "displayName": "Microsoft Teams",
                    "description": "Microsoft Teams enables you to get all your content, tools and conversations in the Team workspace with Office 365.",
                    "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1623/1.0.1623.3210/', parameters('connections_teams_name'), '/icon.png')]",
                    "brandColor": "#4B53BC",
                    "id": "[concat('/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/', parameters('connections_teams_name'))]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/resourceGroups/tech_sales_rg/providers/Microsoft.Web/connections/', parameters('connections_teams_name'), '/extensions/proxy/beta/me/teamwork?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_teams_1_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "gkaspar@envistacorp.com",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {},
                "createdTime": "2023-02-20T20:23:39.3081004Z",
                "changedTime": "2023-03-06T15:49:21.7353329Z",
                "api": {
                    "name": "teams",
                    "displayName": "Microsoft Teams",
                    "description": "Microsoft Teams enables you to get all your content, tools and conversations in the Team workspace with Office 365.",
                    "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1623/1.0.1623.3210/teams/icon.png",
                    "brandColor": "#4B53BC",
                    "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/teams",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/resourceGroups/tech_sales_rg/providers/Microsoft.Web/connections/', parameters('connections_teams_1_name'), '/extensions/proxy/beta/me/teamwork?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-11-01",
            "name": "[parameters('virtualMachines_DrupalCommerce_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_drupalcommerce9_z1_name'))]"
            ],
            "zones": [
                "1"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "canonical",
                        "offer": "0001-com-ubuntu-server-focal",
                        "sku": "20_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_DrupalCommerce_name'), '_OsDisk_1_9036398627524b38a276185461748728')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_DrupalCommerce_name'), '_OsDisk_1_9036398627524b38a276185461748728'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_DrupalCommerce_name')]",
                    "adminUsername": "nclouse",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        },
                        "enableVMAgentPlatformUpdates": false
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_drupalcommerce9_z1_name'))]",
                            "properties": {
                                "deleteOption": "Delete"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('vaults_envista_sales_demo_key_name'), '/7643')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_envista_sales_demo_key_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('vaults_envista_sales_demo_key_name'), '/app-id')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_envista_sales_demo_key_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('vaults_envista_sales_demo_key_name'), '/app-secret')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_envista_sales_demo_key_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('vaults_envista_sales_demo_key_name'), '/customerqueue1')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_envista_sales_demo_key_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('vaults_demo1_NathanClouseAX_name'), '/demo1-servicebus-ConnectionString')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_demo1_NathanClouseAX_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('vaults_envista_sales_demo_key_name'), '/itemcreate')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_envista_sales_demo_key_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('vaults_envista_sales_demo_key_name'), '/storage-account-name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_envista_sales_demo_key_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_ax2d365fo_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_1_name'))]"
            ],
            "tags": {
                "BI-Development": "Developement",
                "Environment": ""
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Month",
                                "interval": 10
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Month",
                                "interval": 10
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Get_blob_content_(V2)": {
                            "runAfter": {},
                            "metadata": {
                                "JTJmYmlkYXRhbGFrZSUyZkRhdGErTWlncmF0aW9uK0QzNjUrVGVzdGluZyUyZkN1c3RvbWVyc19PU0cueGxzeA==": "/bidatalake/Data Migration D365 Testing/Customers_OSG.xlsx"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent('JTJmYmlkYXRhbGFrZSUyZkRhdGErTWlncmF0aW9uK0QzNjUrVGVzdGluZyUyZkN1c3RvbWVyc19PU0cueGxzeA=='))}/content",
                                "queries": {
                                    "inferContentType": true
                                }
                            }
                        },
                        "HTTP": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://envista-sales-demo.sandbox.operations.dynamics.com",
                                    "clientId": "6177feb8-5dad-4385-bbd6-804efeb3476d",
                                    "secret": "CY68Q~tk3SbIUbnW4shRh1skk-IUa.VMnKe3ybHA",
                                    "tenant": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "body": "@string(body('Get_blob_content_(V2)'))",
                                "headers": {
                                    "x-ms-version": "2017-"
                                },
                                "method": "POST",
                                "uri": "https://envista-sales-demo.sandbox.operations.dynamics.com/api/connector/enqueue/F3EC7638-53FF-4E43-AFA3-B7E072CF64B9?entity=Customers+V3&company=GRLT"
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {
                                "Get_blob_content_(V2)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Blob as Text",
                                        "type": "object",
                                        "value": "@body('Get_blob_content_(V2)').$content"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@variables('Blob as Text')",
                                "schema": {
                                    "$content": "77u/PD94bWwgdm...",
                                    "$content-type": "application/xml"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_1_name'))]",
                                "connectionName": "azureblob-1",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/azureblob"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_customer_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_dynamicsax_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "password": {
                            "defaultValue": "EUoSWg4hnBADAlY7MP0yUf93fzt88qtnWnn9VLdjFRfs3XILmVeAMP1S4Y10UoJV",
                            "type": "SecureString"
                        },
                        "username": {
                            "defaultValue": "NathanClouseAX",
                            "type": "SecureString"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "startTime": "2022-10-10T00:00:00Z",
                                "timeZone": "UTC"
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "startTime": "2022-10-10T00:00:00Z",
                                "timeZone": "UTC"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Filter_array": {
                            "runAfter": {
                                "GET_users": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('GET_users')?['data']",
                                "where": "@equals(item()?['attributes']?['field_f_o_account_number'], null)"
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Filter_array')",
                            "actions": {
                                "Create_CustomersV3_record": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "AddressCountryRegionId": "USA",
                                            "CustomerGroupId": "40",
                                            "OrganizationName": "@{items('For_each')?['attributes']?['display_name']}",
                                            "SalesCurrencyCode": "USD",
                                            "SiteId": "2",
                                            "WarehouseId": "21",
                                            "dataAreaId": "USMF"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['dynamicsax']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent('envista-sales-demo.sandbox.operations.dynamics.com'))}/tables/@{encodeURIComponent(encodeURIComponent('CustomersV3'))}/items"
                                    }
                                },
                                "PATCH_user": {
                                    "runAfter": {
                                        "Create_CustomersV3_record": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "password": "@parameters('password')",
                                            "type": "Basic",
                                            "username": "@parameters('username')"
                                        },
                                        "body": {
                                            "field_f_o_account_number": [
                                                {
                                                    "value": "@{body('Create_CustomersV3_record')?['CustomerAccount']}"
                                                }
                                            ]
                                        },
                                        "method": "PATCH",
                                        "uri": "http://20.55.16.44/user/@{items('For_each')?['attributes']?['drupal_internal__uid']}?_format=json"
                                    }
                                }
                            },
                            "runAfter": {
                                "Filter_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "GET_users": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "password": "@parameters('password')",
                                    "type": "Basic",
                                    "username": "@parameters('username')"
                                },
                                "method": "GET",
                                "uri": "http://20.55.16.44/jsonapi/user/user?filter%5banon%5d%5bcondition%5d%5bpath%5d=uid&filter%5banon%5d%5bcondition%5d%5bvalue%5d=0&filter%5banon%5d%5bcondition%5d%5boperator%5d=%3E"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "dynamicsax": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_dynamicsax_name'))]",
                                "connectionName": "dynamicsax",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/centralus/managedApis/dynamicsax"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_d365_teams_http_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_teams_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Post_message_in_a_chat_or_channel": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "messageBody": "<p>hello asdf</p>",
                                    "recipient": {
                                        "channelId": "19:f4a8aee29b9041de8ce191505681ba6d@thread.tacv2",
                                        "groupId": "ff957ebb-44c1-4f15-a449-6437054c5cc6"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/beta/teams/conversation/message/poster/@{encodeURIComponent('Flow bot')}/location/@{encodeURIComponent('Channel')}"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "teams": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_teams_name'))]",
                                "connectionName": "teams",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/teams"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_itemcreate_name')]",
            "location": "northcentralus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "password": {
                            "defaultValue": "EUoSWg4hnBADAlY7MP0yUf93fzt88qtnWnn9VLdjFRfs3XILmVeAMP1S4Y10UoJV",
                            "type": "SecureString"
                        },
                        "username": {
                            "defaultValue": "NathanClouseAX",
                            "type": "SecureString"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_queue_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[concat('/@{encodeURIComponent(encodeURIComponent(''', parameters('workflows_itemcreate_name'), '''))}/messages/head')]",
                                "queries": {
                                    "queueType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Terminate_2": {
                                    "runAfter": {},
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Succeeded"
                                    }
                                }
                            },
                            "runAfter": {
                                "HTTP_-_POST_product_create": [
                                    "Succeeded",
                                    "TimedOut",
                                    "Skipped",
                                    "Failed"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@outputs('HTTP_-_POST_product_create')['statusCode']",
                                            500
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Filter_array_mserp_itemnumber": {
                            "runAfter": {
                                "Filter_inputParamters": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('Filter_inputParamters')[0]?['value']?['Attributes']",
                                "where": "@equals(item()?['key'], 'mserp_itemnumber')"
                            }
                        },
                        "Filter_array_mserp_salesprice": {
                            "runAfter": {
                                "Set_mserp_searchname": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('Filter_inputParamters')[0]?['value']?['Attributes']",
                                "where": "@equals(item()?['key'], 'mserp_salesprice')"
                            }
                        },
                        "Filter_array_mserp_searchname": {
                            "runAfter": {
                                "Set_mserp_itemnumber": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('Filter_inputParamters')[0]?['value']?['Attributes']",
                                "where": "@equals(item()?['key'], 'mserp_searchname')"
                            }
                        },
                        "Filter_inputParamters": {
                            "runAfter": {
                                "parse_payload": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('parse_payload')?['InputParameters']",
                                "where": "@equals(item()?['key'], 'Target')"
                            }
                        },
                        "HTTP_-_POST_product_create": {
                            "runAfter": {
                                "Set_variable_uuid": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "password": "@parameters('password')",
                                    "type": "Basic",
                                    "username": "@parameters('username')"
                                },
                                "body": {
                                    "body": [
                                        {
                                            "format": "basic_html",
                                            "processed": "<p>@{variables('mserp_searchname')}</p>",
                                            "summary": "",
                                            "value": "<p>@{variables('mserp_searchname')}</p>\r\n"
                                        }
                                    ],
                                    "default_langcode": [
                                        {
                                            "value": true
                                        }
                                    ],
                                    "field_brand": [
                                        {
                                            "target_id": 13,
                                            "target_type": "taxonomy_term",
                                            "target_uuid": "7e049019-f8bb-4ff7-9751-4b5700a7329d",
                                            "url": "/taxonomy/term/13"
                                        }
                                    ],
                                    "field_product_categories": [
                                        {
                                            "target_id": 35,
                                            "target_type": "taxonomy_term",
                                            "target_uuid": "f61537d9-c10b-4f93-81d7-f5f29d355c1e",
                                            "url": "/taxonomy/term/35"
                                        }
                                    ],
                                    "field_special_categories": [],
                                    "langcode": [
                                        {
                                            "value": "en"
                                        }
                                    ],
                                    "status": [
                                        {
                                            "value": true
                                        }
                                    ],
                                    "stores": [
                                        {
                                            "target_id": 1,
                                            "target_type": "commerce_store",
                                            "target_uuid": "1d387581-045b-4eb2-989d-b3ce76f64c97",
                                            "url": "/store/1"
                                        }
                                    ],
                                    "title": [
                                        {
                                            "value": "@{variables('mserp_itemnumber')}"
                                        }
                                    ],
                                    "type": [
                                        {
                                            "target_id": "simple",
                                            "target_type": "commerce_product_type",
                                            "target_uuid": "93198cb8-b7bc-4434-99f1-da0d3bd46855"
                                        }
                                    ],
                                    "variations": [
                                        {
                                            "target_id": "@variables('variation_id')",
                                            "target_type": "commerce_product_variation",
                                            "target_uuid": "@{variables('uuid')}"
                                        }
                                    ]
                                },
                                "method": "POST",
                                "retryPolicy": {
                                    "type": "none"
                                },
                                "uri": "http://20.55.16.44/entity/commerce_product/?_format=json"
                            }
                        },
                        "HTTP_-_POST_product_variation_create": {
                            "runAfter": {
                                "If_no_sales_price,_terminate": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "password": "@parameters('password')",
                                    "type": "Basic",
                                    "username": "@parameters('username')"
                                },
                                "body": {
                                    "commerce_stock_always_in_stock": [
                                        {
                                            "value": false
                                        }
                                    ],
                                    "default_langcode": [
                                        {
                                            "value": true
                                        }
                                    ],
                                    "field_f_o_item_number": [
                                        {
                                            "value": "@{variables('mserp_itemnumber')}"
                                        }
                                    ],
                                    "field_images": [
                                        {
                                            "alt": "",
                                            "height": 630,
                                            "target_id": 34,
                                            "target_type": "file",
                                            "target_uuid": "37a0e1ba-c5a5-4ca5-b2ad-4b00fadc8213",
                                            "title": "",
                                            "url": "http://20.55.16.44/sites/default/files/%28Modern%20Furnishings%29%20White%20%26%20Wood%20Chair%20-%201.jpg",
                                            "width": 670
                                        },
                                        {
                                            "alt": "",
                                            "height": 630,
                                            "target_id": 35,
                                            "target_type": "file",
                                            "target_uuid": "eb6dda0f-1ddb-4292-91b6-f68c12abc001",
                                            "title": "",
                                            "url": "http://20.55.16.44/sites/default/files/%28Modern%20Furnishings%29%20White%20%26%20Wood%20Chair%20-%202.jpg",
                                            "width": 670
                                        }
                                    ],
                                    "langcode": [
                                        {
                                            "value": "en"
                                        }
                                    ],
                                    "list_price": [
                                        {
                                            "currency_code": null,
                                            "formatted": null,
                                            "number": null
                                        }
                                    ],
                                    "price": [
                                        {
                                            "currency_code": "USD",
                                            "formatted": "$@{variables('mserp_salesprice')}",
                                            "number": "@{variables('mserp_salesprice')}"
                                        }
                                    ],
                                    "sku": [
                                        {
                                            "value": "@variables('mserp_itemnumber')"
                                        }
                                    ],
                                    "title": [
                                        {
                                            "value": "@{variables('mserp_searchname')}"
                                        }
                                    ],
                                    "type": [
                                        {
                                            "target_id": "simple",
                                            "target_type": "commerce_product_variation_type",
                                            "target_uuid": "8795f6f7-0ebe-43a2-a886-a410b0453c761"
                                        }
                                    ],
                                    "weight": [
                                        {
                                            "number": "1.000000",
                                            "unit": "kg"
                                        }
                                    ]
                                },
                                "method": "POST",
                                "uri": "http://20.55.16.44/entity/commerce_product_variation/?_format=json"
                            }
                        },
                        "If_no_sales_price,_terminate": {
                            "actions": {
                                "Terminate": {
                                    "runAfter": {},
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Cancelled"
                                    }
                                }
                            },
                            "runAfter": {
                                "Set_mserp_salesprice": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('mserp_salesprice')",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize_mserp_itemnumber": {
                            "runAfter": {
                                "convert_from_Base_64": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "mserp_itemnumber",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_mserp_salesprice": {
                            "runAfter": {
                                "Initialize_mserp_searchname": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "mserp_salesprice",
                                        "type": "float"
                                    }
                                ]
                            }
                        },
                        "Initialize_mserp_searchname": {
                            "runAfter": {
                                "Initialize_mserp_itemnumber": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "mserp_searchname",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_uuid": {
                            "runAfter": {
                                "Initialize_variation_id": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "uuid",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variation_id": {
                            "runAfter": {
                                "HTTP_-_POST_product_variation_create": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "variation_id",
                                        "type": "integer"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON_product_variation_create": {
                            "runAfter": {
                                "Initialize_uuid": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP_-_POST_product_variation_create')",
                                "schema": {
                                    "properties": {
                                        "changed": {
                                            "items": {
                                                "properties": {
                                                    "format": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "value",
                                                    "format"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "commerce_stock_always_in_stock": {
                                            "items": {
                                                "properties": {
                                                    "value": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "required": [
                                                    "value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "created": {
                                            "items": {
                                                "properties": {
                                                    "format": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "value",
                                                    "format"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "default_langcode": {
                                            "items": {
                                                "properties": {
                                                    "value": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "required": [
                                                    "value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "field_f_o_item_number": {
                                            "items": {
                                                "properties": {
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "field_images": {
                                            "items": {
                                                "properties": {
                                                    "alt": {
                                                        "type": "string"
                                                    },
                                                    "height": {
                                                        "type": "integer"
                                                    },
                                                    "target_id": {
                                                        "type": "integer"
                                                    },
                                                    "target_type": {
                                                        "type": "string"
                                                    },
                                                    "target_uuid": {
                                                        "type": "string"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "type": "string"
                                                    },
                                                    "width": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "target_id",
                                                    "alt",
                                                    "title",
                                                    "width",
                                                    "height",
                                                    "target_type",
                                                    "target_uuid",
                                                    "url"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "langcode": {
                                            "items": {
                                                "properties": {
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "list_price": {
                                            "type": "array"
                                        },
                                        "price": {
                                            "items": {
                                                "properties": {
                                                    "currency_code": {
                                                        "type": "string"
                                                    },
                                                    "formatted": {
                                                        "type": "string"
                                                    },
                                                    "number": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "number",
                                                    "currency_code",
                                                    "formatted"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "product_id": {
                                            "type": "array"
                                        },
                                        "sku": {
                                            "items": {
                                                "properties": {
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "status": {
                                            "items": {
                                                "properties": {
                                                    "value": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "required": [
                                                    "value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "title": {
                                            "type": "array"
                                        },
                                        "type": {
                                            "items": {
                                                "properties": {
                                                    "target_id": {
                                                        "type": "string"
                                                    },
                                                    "target_type": {
                                                        "type": "string"
                                                    },
                                                    "target_uuid": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "target_id",
                                                    "target_type",
                                                    "target_uuid"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "uid": {
                                            "items": {
                                                "properties": {
                                                    "target_id": {
                                                        "type": "integer"
                                                    },
                                                    "target_type": {
                                                        "type": "string"
                                                    },
                                                    "target_uuid": {
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "target_id",
                                                    "target_type",
                                                    "target_uuid",
                                                    "url"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "uuid": {
                                            "items": {
                                                "properties": {
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "variation_id": {
                                            "items": {
                                                "properties": {
                                                    "value": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "weight": {
                                            "items": {
                                                "properties": {
                                                    "number": {
                                                        "type": "string"
                                                    },
                                                    "unit": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "number",
                                                    "unit"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Set_mserp_itemnumber": {
                            "runAfter": {
                                "Filter_array_mserp_itemnumber": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "mserp_itemnumber",
                                "value": "@{body('Filter_array_mserp_itemnumber')[0]?['value']}"
                            }
                        },
                        "Set_mserp_salesprice": {
                            "runAfter": {
                                "Filter_array_mserp_salesprice": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "mserp_salesprice",
                                "value": "@body('Filter_array_mserp_salesprice')[0]?['value']"
                            }
                        },
                        "Set_mserp_searchname": {
                            "runAfter": {
                                "Filter_array_mserp_searchname": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "mserp_searchname",
                                "value": "@{body('Filter_array_mserp_searchname')[0]?['value']}"
                            }
                        },
                        "Set_variable_uuid": {
                            "runAfter": {
                                "Set_variable_variation_id": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "uuid",
                                "value": "@{body('Parse_JSON_product_variation_create')?['uuid'][0]['value']}"
                            }
                        },
                        "Set_variable_variation_id": {
                            "runAfter": {
                                "Parse_JSON_product_variation_create": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "variation_id",
                                "value": "@body('Parse_JSON_product_variation_create')?['variation_id'][0]['value']"
                            }
                        },
                        "convert_from_Base_64": {
                            "runAfter": {},
                            "type": "Compose",
                            "inputs": "@base64ToString(triggerBody()?['ContentData'])"
                        },
                        "parse_payload": {
                            "runAfter": {
                                "Initialize_mserp_salesprice": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@json(outputs('convert_from_Base_64'))",
                                "schema": {
                                    "properties": {
                                        "content": {
                                            "properties": {
                                                "BusinessUnitId": {
                                                    "type": "string"
                                                },
                                                "CorrelationId": {
                                                    "type": "string"
                                                },
                                                "Depth": {
                                                    "type": "integer"
                                                },
                                                "InitiatingUserAzureActiveDirectoryObjectId": {
                                                    "type": "string"
                                                },
                                                "InitiatingUserId": {
                                                    "type": "string"
                                                },
                                                "InputParameters": {
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "properties": {
                                                                    "Attributes": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "properties": {
                                                                                        "Value": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "__type": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "key",
                                                                                "value"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "EntityState": {},
                                                                    "FormattedValues": {
                                                                        "type": "array"
                                                                    },
                                                                    "Id": {
                                                                        "type": "string"
                                                                    },
                                                                    "KeyAttributes": {
                                                                        "type": "array"
                                                                    },
                                                                    "LogicalName": {
                                                                        "type": "string"
                                                                    },
                                                                    "RelatedEntities": {
                                                                        "type": "array"
                                                                    },
                                                                    "RowVersion": {},
                                                                    "__type": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "value"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "IsExecutingOffline": {
                                                    "type": "boolean"
                                                },
                                                "IsInTransaction": {
                                                    "type": "boolean"
                                                },
                                                "IsOfflinePlayback": {
                                                    "type": "boolean"
                                                },
                                                "IsolationMode": {
                                                    "type": "integer"
                                                },
                                                "MessageName": {
                                                    "type": "string"
                                                },
                                                "Mode": {
                                                    "type": "integer"
                                                },
                                                "OperationCreatedOn": {
                                                    "type": "string"
                                                },
                                                "OperationId": {
                                                    "type": "string"
                                                },
                                                "OrganizationId": {
                                                    "type": "string"
                                                },
                                                "OrganizationName": {
                                                    "type": "string"
                                                },
                                                "OutputParameters": {
                                                    "type": "array"
                                                },
                                                "OwningExtension": {
                                                    "properties": {
                                                        "Id": {
                                                            "type": "string"
                                                        },
                                                        "KeyAttributes": {
                                                            "type": "array"
                                                        },
                                                        "LogicalName": {
                                                            "type": "string"
                                                        },
                                                        "Name": {},
                                                        "RowVersion": {}
                                                    },
                                                    "type": "object"
                                                },
                                                "ParentContext": {},
                                                "PostEntityImages": {
                                                    "type": "array"
                                                },
                                                "PreEntityImages": {
                                                    "type": "array"
                                                },
                                                "PrimaryEntityId": {
                                                    "type": "string"
                                                },
                                                "PrimaryEntityName": {
                                                    "type": "string"
                                                },
                                                "RequestId": {
                                                    "type": "string"
                                                },
                                                "SecondaryEntityName": {
                                                    "type": "string"
                                                },
                                                "SharedVariables": {
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "value"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "Stage": {
                                                    "type": "integer"
                                                },
                                                "UserAzureActiveDirectoryObjectId": {
                                                    "type": "string"
                                                },
                                                "UserId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "schema": {
                                            "properties": {
                                                "properties": {
                                                    "properties": {
                                                        "BusinessUnitId": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "CorrelationId": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "Depth": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "InitiatingUserAzureActiveDirectoryObjectId": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "InitiatingUserId": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "InputParameters": {
                                                            "properties": {
                                                                "items": {
                                                                    "properties": {
                                                                        "properties": {
                                                                            "properties": {
                                                                                "key": {
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "value": {
                                                                                    "properties": {
                                                                                        "properties": {
                                                                                            "properties": {
                                                                                                "Attributes": {
                                                                                                    "properties": {
                                                                                                        "items": {
                                                                                                            "properties": {
                                                                                                                "properties": {
                                                                                                                    "properties": {
                                                                                                                        "key": {
                                                                                                                            "properties": {
                                                                                                                                "type": {
                                                                                                                                    "type": "string"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "type": "object"
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "properties": {
                                                                                                                                "properties": {
                                                                                                                                    "properties": {
                                                                                                                                        "Value": {
                                                                                                                                            "properties": {
                                                                                                                                                "type": {
                                                                                                                                                    "type": "string"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "type": "object"
                                                                                                                                        },
                                                                                                                                        "__type": {
                                                                                                                                            "properties": {
                                                                                                                                                "type": {
                                                                                                                                                    "type": "string"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "type": "object"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "type": "object"
                                                                                                                                },
                                                                                                                                "type": {
                                                                                                                                    "type": "string"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "type": "object"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "type": "object"
                                                                                                                },
                                                                                                                "required": {
                                                                                                                    "items": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "type": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "type": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "EntityState": {
                                                                                                    "properties": {},
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "FormattedValues": {
                                                                                                    "properties": {
                                                                                                        "type": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "Id": {
                                                                                                    "properties": {
                                                                                                        "type": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "KeyAttributes": {
                                                                                                    "properties": {
                                                                                                        "type": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "LogicalName": {
                                                                                                    "properties": {
                                                                                                        "type": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "RelatedEntities": {
                                                                                                    "properties": {
                                                                                                        "type": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "RowVersion": {
                                                                                                    "properties": {},
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "__type": {
                                                                                                    "properties": {
                                                                                                        "type": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "required": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "type": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "IsExecutingOffline": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "IsInTransaction": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "IsOfflinePlayback": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "IsolationMode": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "MessageName": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "Mode": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "OperationCreatedOn": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "OperationId": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "OrganizationId": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "OrganizationName": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "OutputParameters": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "OwningExtension": {
                                                            "properties": {
                                                                "properties": {
                                                                    "properties": {
                                                                        "Id": {
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "KeyAttributes": {
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "LogicalName": {
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "Name": {
                                                                            "properties": {},
                                                                            "type": "object"
                                                                        },
                                                                        "RowVersion": {
                                                                            "properties": {},
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "ParentContext": {
                                                            "properties": {},
                                                            "type": "object"
                                                        },
                                                        "PostEntityImages": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "PreEntityImages": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "PrimaryEntityId": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "PrimaryEntityName": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "RequestId": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "SecondaryEntityName": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "SharedVariables": {
                                                            "properties": {
                                                                "items": {
                                                                    "properties": {
                                                                        "properties": {
                                                                            "properties": {
                                                                                "key": {
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "value": {
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "required": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "type": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "Stage": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "UserAzureActiveDirectoryObjectId": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "UserId": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_name'))]",
                                "connectionName": "servicebus",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/northcentralus/managedApis/servicebus"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_logic_7643_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_1_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "FO Endpoint": {
                            "defaultValue": "https://envista-sales-demo.sandbox.operations.dynamics.com",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_queue_(peek-lock)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('7643'))}/messages/head/peek",
                                "queries": {
                                    "queueType": "Main",
                                    "sessionId": "None"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Complete_the_message_in_a_queue": {
                            "runAfter": {
                                "Send_an_email_(V2)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                    }
                                },
                                "method": "delete",
                                "path": "/@{encodeURIComponent(encodeURIComponent('7643'))}/messages/complete",
                                "queries": {
                                    "lockToken": "@triggerBody()?['LockToken']",
                                    "queueType": "Main"
                                }
                            }
                        },
                        "Get_PurchaseOrderHeadersV2": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "@parameters('FO Endpoint')",
                                    "clientId": "134573a2-4e29-486b-9f0a-708b7b2eb5c8",
                                    "secret": "NiP8Q~NwGZOyMNBWCSPS.nxykFeAHxwr2bI1zalR",
                                    "tenant": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "method": "GET",
                                "queries": {
                                    "cross-company": "true"
                                },
                                "uri": "@{parameters('FO Endpoint')}/data/PurchaseOrderHeadersV2(dataAreaId='@{body('Parse_JSON')?['LegalEntity']}',PurchaseOrderNumber='@{body('Parse_JSON')?['PurchaseOrderNumber']}')"
                            }
                        },
                        "Get_PurchaseOrderLinesV2": {
                            "runAfter": {
                                "Get_PurchaseOrderHeadersV2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "@parameters('FO Endpoint')",
                                    "clientId": "134573a2-4e29-486b-9f0a-708b7b2eb5c8",
                                    "secret": "NiP8Q~NwGZOyMNBWCSPS.nxykFeAHxwr2bI1zalR",
                                    "tenant": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "method": "GET",
                                "queries": {
                                    "$filter": "dataAreaId eq '@{body('Parse_JSON')?['LegalEntity']}' and PurchaseOrderNumber eq '@{body('Parse_JSON')?['PurchaseOrderNumber']}'",
                                    "cross-company": "true"
                                },
                                "uri": "@{parameters('FO Endpoint')}/data/PurchaseOrderLinesV2"
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@decodeBase64(triggerBody()?['ContentData'])",
                                "schema": {
                                    "properties": {
                                        "BusinessEventId": {
                                            "type": "string"
                                        },
                                        "BusinessEventLegalEntity": {
                                            "type": "string"
                                        },
                                        "ContextRecordSubject": {
                                            "type": "string"
                                        },
                                        "ControlNumber": {
                                            "type": "integer"
                                        },
                                        "EventId": {
                                            "type": "string"
                                        },
                                        "EventTime": {
                                            "type": "string"
                                        },
                                        "EventTimeIso8601": {
                                            "type": "string"
                                        },
                                        "InitiatingUserAADObjectId": {
                                            "type": "string"
                                        },
                                        "LegalEntity": {
                                            "type": "string"
                                        },
                                        "MajorVersion": {
                                            "type": "integer"
                                        },
                                        "MinorVersion": {
                                            "type": "integer"
                                        },
                                        "ParentContextRecordSubjects": {},
                                        "PurchaseJournal": {
                                            "type": "string"
                                        },
                                        "PurchaseOrderDate": {
                                            "type": "string"
                                        },
                                        "PurchaseOrderNumber": {
                                            "type": "string"
                                        },
                                        "PurchaseType": {
                                            "type": "string"
                                        },
                                        "TransactionCurrencyAmount": {
                                            "type": "number"
                                        },
                                        "TransactionCurrencyCode": {
                                            "type": "string"
                                        },
                                        "VendorAccount": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Send_an_email_(V2)": {
                            "runAfter": {
                                "Get_PurchaseOrderLinesV2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Attachments": [
                                        {
                                            "ContentBytes": "@{base64(body('Get_PurchaseOrderHeadersV2'))}",
                                            "Name": "PurchaseOrderHeadersV2-@{body('Parse_JSON')?['PurchaseOrderNumber']}.json"
                                        },
                                        {
                                            "ContentBytes": "@{base64(body('Get_PurchaseOrderLinesV2'))}",
                                            "Name": "PurchaseOrderLinesV2-@{body('Parse_JSON')?['PurchaseOrderNumber']}.json"
                                        }
                                    ],
                                    "Body": "<p>Attached are the header and lines JSON for a Purchase Order.</p>",
                                    "Cc": "gkaspar@envistacorp.com",
                                    "Importance": "Normal",
                                    "Subject": "[concat(parameters('workflows_logic_7643_name'), ' result')]",
                                    "To": "nclouse@envistacorp.com"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        },
                        "Terminate": {
                            "runAfter": {
                                "Complete_the_message_in_a_queue": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Terminate",
                            "inputs": {
                                "runStatus": "Succeeded"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "connectionId": "[parameters('connections_office365_externalid')]",
                                "connectionName": "office365",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/office365"
                            },
                            "servicebus_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_1_name'))]",
                                "connectionName": "servicebus-1",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/servicebus"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_logic_7644_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_teams_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Post_message_in_a_chat_or_channel": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "messageBody": "<p>@{triggerBody()}</p>",
                                    "recipient": {
                                        "channelId": "19:f4a8aee29b9041de8ce191505681ba6d@thread.tacv2",
                                        "groupId": "ff957ebb-44c1-4f15-a449-6437054c5cc6"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/beta/teams/conversation/message/poster/@{encodeURIComponent('Flow bot')}/location/@{encodeURIComponent('Channel')}"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "teams": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_teams_name'))]",
                                "connectionName": "teams",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/teams"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_logic_7645_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "FO Endpoint": {
                            "defaultValue": "https://envista-sales-demo.sandbox.operations.dynamics.com",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Post_": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "method": "POST",
                                "uri": "@{parameters('FO Endpoint')}/data/VendorsV3"
                            }
                        },
                        "Send_an_email_(V2)": {
                            "runAfter": {
                                "Post_": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "<p>@{body('Post_')}</p>",
                                    "Importance": "Normal",
                                    "Subject": "[concat(parameters('workflows_logic_7645_name'), ' result')]",
                                    "To": "nclouse@envistacorp.com"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]",
                                "connectionName": "office365",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/office365"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_logic_7647_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_1_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_queue_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('7647'))}/messages/head",
                                "queries": {
                                    "queueType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "For_each": {
                            "foreach": "@body('Parse_JSON')",
                            "actions": {
                                "Send_message": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "ContentData": "@{base64(items('For_each'))}",
                                            "ContentType": "application/json"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['servicebus']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/@{encodeURIComponent(encodeURIComponent('7646'))}/messages"
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@decodeBase64(triggerBody()?['ContentData'])",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "key"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "Terminate": {
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Terminate",
                            "inputs": {
                                "runStatus": "Cancelled"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_1_name'))]",
                                "connectionName": "servicebus-1",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/servicebus"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_logic_7649_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_1_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_queue_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('7649'))}/messages/head",
                                "queries": {
                                    "queueType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Terminate": {
                            "runAfter": {},
                            "type": "Terminate",
                            "inputs": {
                                "runStatus": "Cancelled"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_1_name'))]",
                                "connectionName": "servicebus-1",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/servicebus"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_logic_7650_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_1_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_queue_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('7650'))}/messages/head",
                                "queries": {
                                    "queueType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Terminate": {
                            "runAfter": {},
                            "type": "Terminate",
                            "inputs": {
                                "runStatus": "Cancelled"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_1_name'))]",
                                "connectionName": "servicebus-1",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/servicebus"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_logic_7651_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_1_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_queue_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('7651'))}/messages/head",
                                "queries": {
                                    "queueType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Terminate": {
                            "runAfter": {},
                            "type": "Terminate",
                            "inputs": {
                                "runStatus": "Cancelled"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_1_name'))]",
                                "connectionName": "servicebus-1",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/servicebus"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_order_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_dynamicsax_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "password": {
                            "defaultValue": "EUoSWg4hnBADAlY7MP0yUf93fzt88qtnWnn9VLdjFRfs3XILmVeAMP1S4Y10UoJV",
                            "type": "SecureString"
                        },
                        "username": {
                            "defaultValue": "NathanClouseAX",
                            "type": "SecureString"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "startTime": "2022-10-10T00:00:00Z",
                                "timeZone": "UTC"
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "startTime": "2022-10-10T00:00:00Z",
                                "timeZone": "UTC"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Filter_orders": {
                            "runAfter": {
                                "GET_orders": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "[concat('@body(''GET_', parameters('workflows_order_name'), 's'')?[''data'']')]",
                                "where": "[concat('@and(not(equals(item()?[''attributes'']?[''', parameters('workflows_order_name'), '_number''], null)), equals(item()?[''attributes'']?[''state''], ''completed''), equals(item()?[''attributes'']?[''field_f_o_', parameters('workflows_order_name'), '_number''], null))')]"
                            }
                        },
                        "For_each_order": {
                            "foreach": "[concat('@body(''Filter_', parameters('workflows_order_name'), 's'')')]",
                            "actions": {
                                "Compose": {
                                    "runAfter": {
                                        "GET_product_variation": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "?xml": {
                                            "@@encoding": "utf-8",
                                            "@@version": "1.0"
                                        },
                                        "Document": {
                                            "SALESORDERHEADERV2ENTITY": {
                                                "DELIVERYMODECODE": "40",
                                                "DELIVERYTERMSCODE": "FOB",
                                                "EMAIL": "[concat('@{body(''GET_', parameters('workflows_order_name'), ''')?[''mail''][0]?[''value'']}')]",
                                                "FORMATTEDINVOICEADDRESS": "",
                                                "INVOICEADDRESSCITY": "@{body('GET_profile')?['address'][0]?['locality']}",
                                                "INVOICEADDRESSCOUNTRYREGIONID": "USA",
                                                "INVOICEADDRESSCOUNTRYREGIONISOCODE": "US",
                                                "INVOICEADDRESSSTATEID": "@{body('GET_profile')?['address'][0]?['administrative_area']}",
                                                "INVOICEADDRESSSTREET": "@{body('GET_profile')?['address'][0]?['address_line1']}",
                                                "INVOICEADDRESSZIPCODE": "@{body('GET_profile')?['address'][0]?['postal_code']}",
                                                "INVOICECUSTOMERACCOUNTNUMBER": "@{body('GET_user')?['field_f_o_account_number'][0]?['value']}",
                                                "LANGUAGEID": "en-us",
                                                "ORDERINGCUSTOMERACCOUNTNUMBER": "@{body('GET_user')?['field_f_o_account_number'][0]?['value']}",
                                                "SALESORDERLINEV2ENTITY": {
                                                    "ITEMNUMBER": "@{body('GET_product_variation')?['field_f_o_item_number'][0]?['value']}",
                                                    "LINEAMOUNT": "[concat('@{body(''GET_', parameters('workflows_order_name'), '_line'')?[''total_price''][0]?[''number'']}')]",
                                                    "ORDEREDSALESQUANTITY": "[concat('@{body(''GET_', parameters('workflows_order_name'), '_line'')?[''quantity''][0]?[''value'']}')]",
                                                    "SALESPRICE": "[concat('@{body(''GET_', parameters('workflows_order_name'), '_line'')?[''unit_price''][0]?[''number'']}')]",
                                                    "SALESPRICEQUANTITY": "1.000000000000"
                                                }
                                            }
                                        }
                                    }
                                },
                                "Create_SalesOrderHeadersV2": {
                                    "runAfter": {
                                        "POST_SalesOrderComposite": [
                                            "Skipped"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "DeliveryAddressCity": "@{body('GET_profile')?['address'][0]?['locality']}",
                                            "DeliveryAddressCountryRegionISOCode": "US",
                                            "DeliveryAddressCountryRegionId": "USA",
                                            "DeliveryAddressStateId": "@{body('GET_profile')?['address'][0]?['administrative_area']}",
                                            "DeliveryAddressStreet": "@{body('GET_profile')?['address'][0]?['address_line1']}",
                                            "DeliveryAddressZipCode": "@{body('GET_profile')?['address'][0]?['postal_code']}",
                                            "DeliveryModeCode": "40",
                                            "DeliveryTermsCode": "FOB",
                                            "Email": "[concat('@{body(''GET_', parameters('workflows_order_name'), ''')?[''mail''][0]?[''value'']}')]",
                                            "InvoiceCustomerAccountNumber": "@{body('GET_user')?['field_f_o_account_number'][0]?['value']}",
                                            "LanguageId": "en-us",
                                            "OrderingCustomerAccountNumber": "@{body('GET_user')?['field_f_o_account_number'][0]?['value']}",
                                            "dataAreaId": "USMF"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['dynamicsax']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent('envista-sales-demo.sandbox.operations.dynamics.com'))}/tables/@{encodeURIComponent(encodeURIComponent('SalesOrderHeadersV2'))}/items"
                                    }
                                },
                                "Create_SalesOrderLine": {
                                    "runAfter": {
                                        "Create_SalesOrderHeadersV2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "ItemNumber": "@{body('GET_product_variation')?['field_f_o_item_number'][0]?['value']}",
                                            "LineAmount": "[concat('@float(body(''GET_', parameters('workflows_order_name'), '_line'')?[''total_price''][0]?[''number''])')]",
                                            "OrderedSalesQuantity": "[concat('@float(body(''GET_', parameters('workflows_order_name'), '_line'')?[''quantity''][0]?[''value''])')]",
                                            "SalesOrderNumber": "@{body('Create_SalesOrderHeadersV2')?['SalesOrderNumber']}",
                                            "SalesPrice": "[concat('@float(body(''GET_', parameters('workflows_order_name'), '_line'')?[''unit_price''][0]?[''number''])')]",
                                            "SalesPriceQuantity": 1,
                                            "dataAreaId": "USMF"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['dynamicsax']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent('envista-sales-demo.sandbox.operations.dynamics.com'))}/tables/@{encodeURIComponent(encodeURIComponent('SalesOrderLines'))}/items"
                                    }
                                },
                                "GET_order": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "password": "@parameters('password')",
                                            "type": "Basic",
                                            "username": "@parameters('username')"
                                        },
                                        "method": "GET",
                                        "uri": "[concat('http://20.55.16.44/admin/commerce/', parameters('workflows_order_name'), 's/@{items(''For_each_', parameters('workflows_order_name'), ''')?[''attributes'']?[''drupal_internal__', parameters('workflows_order_name'), '_id'']}?_format=json')]"
                                    }
                                },
                                "GET_order_line": {
                                    "runAfter": {
                                        "GET_profile": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "password": "@parameters('password')",
                                            "type": "Basic",
                                            "username": "@parameters('username')"
                                        },
                                        "method": "GET",
                                        "uri": "[concat('http://20.55.16.44/entity/commerce_', parameters('workflows_order_name'), '_item/@{body(''GET_', parameters('workflows_order_name'), ''')?[''', parameters('workflows_order_name'), '_items''][0]?[''target_id'']}?_format=json')]"
                                    }
                                },
                                "GET_product_variation": {
                                    "runAfter": {
                                        "GET_order_line": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "password": "@parameters('password')",
                                            "type": "Basic",
                                            "username": "@parameters('username')"
                                        },
                                        "method": "GET",
                                        "uri": "[concat('http://20.55.16.44/entity/commerce_product_variation/@{body(''GET_', parameters('workflows_order_name'), '_line'')?[''purchased_entity''][0]?[''target_id'']}?_format=json')]"
                                    }
                                },
                                "GET_profile": {
                                    "runAfter": {
                                        "GET_user": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "password": "@parameters('password')",
                                            "type": "Basic",
                                            "username": "@parameters('username')"
                                        },
                                        "method": "GET",
                                        "uri": "[concat('http://20.55.16.44/profile/@{body(''GET_', parameters('workflows_order_name'), ''')?[''billing_profile''][0]?[''target_id'']}?_format=json')]"
                                    },
                                    "description": "currently null"
                                },
                                "GET_user": {
                                    "runAfter": {
                                        "GET_order": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "password": "@parameters('password')",
                                            "type": "Basic",
                                            "username": "@parameters('username')"
                                        },
                                        "method": "GET",
                                        "uri": "[concat('http://20.55.16.44/user/@{body(''GET_', parameters('workflows_order_name'), ''')?[''uid''][0]?[''target_id'']}?_format=json')]"
                                    }
                                },
                                "PATCH_order": {
                                    "runAfter": {
                                        "Create_SalesOrderLine": [
                                            "Failed"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "password": "@parameters('password')",
                                            "type": "Basic",
                                            "username": "@parameters('username')"
                                        },
                                        "body": {
                                            "field_f_o_order_number": [
                                                {
                                                    "value": "@{body('Create_SalesOrderHeadersV2')?['SalesOrderNumber']}"
                                                }
                                            ]
                                        },
                                        "method": "PATCH",
                                        "uri": "[concat('http://20.55.16.44/', parameters('workflows_order_name'), '/@{items(''For_each_', parameters('workflows_order_name'), ''')?[''attributes'']?[''drupal_internal__', parameters('workflows_order_name'), '_id'']}?_format=json')]"
                                    }
                                },
                                "POST_SalesOrderComposite": {
                                    "runAfter": {
                                        "Set_xml-payload": [
                                            "Failed"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://envista-sales-demo.sandbox.operations.dynamics.com/",
                                            "authority": "https://login.microsoftonline.com",
                                            "clientId": "134573a2-4e29-486b-9f0a-708b7b2eb5c8",
                                            "secret": "D9v8Q~pAZfCuRILAKOmPAi8aJ.WbwVIhn.AMQbCf",
                                            "tenant": "envistacorp.com",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "body": "@variables('xml-payload')",
                                        "headers": {
                                            "Content-Type": "application/xml"
                                        },
                                        "method": "POST",
                                        "uri": "[concat('https://envista-sales-demo.sandbox.operations.dynamics.com/api/connector/enqueue/%7BB3525C35-37CD-491E-9B11-D6B94923F2C1%7D?entity=Sales%20', parameters('workflows_order_name'), 's%20composite%20V3')]"
                                    }
                                },
                                "Set_xml-payload": {
                                    "runAfter": {
                                        "Compose": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "xml-payload",
                                        "value": "@xml(outputs('Compose'))"
                                    }
                                }
                            },
                            "runAfter": {
                                "Filter_orders": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "GET_orders": {
                            "runAfter": {
                                "Initialize_xml-payload": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "password": "@parameters('password')",
                                    "type": "Basic",
                                    "username": "@parameters('username')"
                                },
                                "method": "GET",
                                "uri": "[concat('http://20.55.16.44/jsonapi/commerce_', parameters('workflows_order_name'), '/default')]"
                            }
                        },
                        "Initialize_xml-payload": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "xml-payload",
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "dynamicsax": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_dynamicsax_name'))]",
                                "connectionName": "dynamicsax",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/centralus/managedApis/dynamicsax"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-07-01",
            "name": "[concat(parameters('networkSecurityGroups_DrupalCommerce_nsg_name'), '/HTTP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_DrupalCommerce_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 320,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-07-01",
            "name": "[concat(parameters('networkSecurityGroups_DrupalCommerce_nsg_name'), '/SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_DrupalCommerce_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-07-01",
            "name": "[parameters('virtualNetworks_tech_sales_rg_vnet_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_tech_sales_rg_vnet_name'), 'default')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_tech_sales_rg_vnet_name'), 'default')]",
                        "properties": {
                            "addressPrefix": "10.1.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-07-01",
            "name": "[concat(parameters('virtualNetworks_tech_sales_rg_vnet_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_tech_sales_rg_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.1.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/authorizationrules",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/ListenAccessKey')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen"
                ]
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/authorizationrules",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_demo1_servicebus_name'), '/RootManageSharedAccessKey')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_demo1_servicebus_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/authorizationrules",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/RootManageSharedAccessKey')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/networkRuleSets",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_demo1_servicebus_name'), '/default')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_demo1_servicebus_name'))]"
            ],
            "properties": {
                "publicNetworkAccess": "Enabled",
                "defaultAction": "Allow",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/networkRuleSets",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/default')]",
            "location": "East US 2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "publicNetworkAccess": "Enabled",
                "defaultAction": "Allow",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/7643')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/7646')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/7647')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/7649')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/7650')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/7651')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/7667')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_demo1_servicebus_name'), '/asdf')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_demo1_servicebus_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/customerqueue')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/dmfexportcomplete')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/itemcreate')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT2M30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 2000,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_demo1_servicebus_name'), '/salesorder-create')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_demo1_servicebus_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_demo1_servicebus_name'), '/test')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_demo1_servicebus_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": true,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/test')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": true,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[parameters('workspaces_envsynapsedemo_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "tags": {
                "BI": "Synapse",
                "BI-Development": "Developement"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "defaultDataLakeStorage": {
                    "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]",
                    "createManagedPrivateEndpoint": false,
                    "accountUrl": "https://envistasalesdemodatalake.dfs.core.windows.net",
                    "filesystem": "synapsedemo"
                },
                "encryption": {},
                "managedResourceGroupName": "synapseworkspace-managedrg-7c27a73e-f424-4895-84aa-083419affccd",
                "sqlAdministratorLogin": "sa-admin",
                "privateEndpointConnections": [],
                "publicNetworkAccess": "Enabled",
                "cspWorkspaceAdminProperties": {
                    "initialWorkspaceAdminObjectId": "7b60d939-7d99-4ea0-b96f-166eedbb39e4"
                },
                "azureADOnlyAuthentication": false,
                "trustedServiceBypassEnabled": false
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/auditingSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_envsynapsedemo_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_envsynapsedemo_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/azureADOnlyAuthentications",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_envsynapsedemo_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_envsynapsedemo_name'))]"
            ],
            "properties": {
                "azureADOnlyAuthentication": false
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/dedicatedSQLminimalTlsSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_envsynapsedemo_name'), '/default')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_envsynapsedemo_name'))]"
            ],
            "properties": {
                "minimalTlsVersion": "1.2"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/extendedAuditingSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_envsynapsedemo_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_envsynapsedemo_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/firewallRules",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_envsynapsedemo_name'), '/allowAll')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_envsynapsedemo_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/integrationruntimes",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_envsynapsedemo_name'), '/AutoResolveIntegrationRuntime')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_envsynapsedemo_name'))]"
            ],
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "AutoResolve"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/securityAlertPolicies",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_envsynapsedemo_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_envsynapsedemo_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/vulnerabilityAssessments",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_envsynapsedemo_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_envsynapsedemo_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                },
                "storageContainerPath": "[parameters('vulnerabilityAssessments_Default_storageContainerPath')]"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_blob2finops_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_1_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "azureblob_accountName": {
                            "defaultValue": "",
                            "type": "String",
                            "metadata": {
                                "description": "Name of the storage account the connector should use."
                            }
                        },
                        "azureblob_displayName": {
                            "defaultValue": "get-files-to-be-processed",
                            "type": "String"
                        },
                        "azureblob_name": {
                            "defaultValue": "azureblob",
                            "type": "String"
                        },
                        "office365-2_displayName": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "office365-2_name": {
                            "defaultValue": "office365-2",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "When_a_blob_is_added_or_modified_(properties_only)_(V2)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "splitOn": "@triggerBody()",
                            "metadata": {
                                "JTJmYmlkYXRhbGFrZSUyZkRhdGErTWlncmF0aW9uK0QzNjUrVGVzdGluZyUyZg==": "/bidatalake/Data Migration D365 Testing/"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/triggers/batch/onupdatedfile",
                                "queries": {
                                    "checkBothCreatedAndModifiedDateTime": false,
                                    "folderId": "JTJmYmlkYXRhbGFrZSUyZkRhdGErTWlncmF0aW9uK0QzNjUrVGVzdGluZyUyZg==",
                                    "maxFileCount": 10
                                }
                            }
                        }
                    },
                    "actions": {
                        "Copy_file_to_processing_folder": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/copyFile",
                                "queries": {
                                    "destination": "/bidatalake/Data Migration D365 Testing/processed/",
                                    "overwrite": true,
                                    "queryParametersSingleEncoded": true,
                                    "source": "/bidatalake/Data Migration D365 Testing/@{triggerBody()?['Name']}"
                                }
                            }
                        },
                        "Create_SAS_URI_by_path": {
                            "runAfter": {
                                "Copy_file_to_processing_folder": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Permissions": "Read"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/CreateSharedLinkByPath",
                                "queries": {
                                    "path": "@body('Copy_file_to_processing_folder')?['Path']"
                                }
                            }
                        },
                        "Initiate_Package_Import": {
                            "runAfter": {
                                "Create_SAS_URI_by_path": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://envista-sales-demo.sandbox.operations.dynamics.com",
                                    "clientId": "6177feb8-5dad-4385-bbd6-804efeb3476d",
                                    "secret": "CY68Q~tk3SbIUbnW4shRh1skk-IUa.VMnKe3ybHA",
                                    "tenant": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "body": {
                                    "definitionGroupId": "@first(split(body('Copy_file_to_processing_folder')?['Name'], '.'))",
                                    "execute": true,
                                    "executionId": "",
                                    "legalEntityId": "GLRT",
                                    "overwrite": true,
                                    "packageUrl": "@body('Create_SAS_URI_by_path')?['WebUrl']"
                                },
                                "method": "POST",
                                "uri": "https://envista-sales-demo.sandbox.operations.dynamics.com/data/DataManagementDefinitionGroups/Microsoft.Dynamics.DataEntities.ImportFromPackage"
                            }
                        },
                        "Move_file_to_folder_based_on_execution_success": {
                            "runAfter": {
                                "Wait_For_Execution_Results": [
                                    "Succeeded"
                                ]
                            },
                            "cases": {
                                "PartiallySuceeded": {
                                    "case": "PartiallySucceeded",
                                    "actions": {
                                        "Copy_file_to_partiallysucceeded_folder": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/datasets/default/copyFile",
                                                "queries": {
                                                    "destination": "/bidatalake/Data Migration D365 Testing/PartiallySucceeded/",
                                                    "overwrite": true,
                                                    "queryParametersSingleEncoded": true,
                                                    "source": "@body('Copy_file_to_processing_folder')?['Path']"
                                                }
                                            }
                                        }
                                    }
                                },
                                "Succeeded": {
                                    "case": "Succeeded",
                                    "actions": {
                                        "Copy_file_to_succeeded_folder": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/datasets/default/copyFile",
                                                "queries": {
                                                    "destination": "/bidatalake/Data Migration D365 Testing/Succeeded/",
                                                    "overwrite": true,
                                                    "queryParametersSingleEncoded": true,
                                                    "source": "/bidatalake/Data Migration D365 Testing/processed/@{body('Copy_file_to_processing_folder')?['Name']}"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {
                                    "Copy_file_to_failed_folder": {
                                        "runAfter": {},
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/datasets/default/copyFile",
                                            "queries": {
                                                "destination": "/bidatalake/Data Migration D365 Testing/failed/",
                                                "overwrite": true,
                                                "queryParametersSingleEncoded": true,
                                                "source": "@body('Copy_file_to_processing_folder')?['Path']"
                                            }
                                        }
                                    }
                                }
                            },
                            "expression": "@body('Get_Execution_Results')['value']",
                            "type": "Switch"
                        },
                        "Send_email_if_API_returns_an_error": {
                            "runAfter": {
                                "Initiate_Package_Import": [
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "D365 Import has failed using the API in Logic App BlobStorageToD365.\n\nFilename: @{body('Copy_file_to_processing_folder')?['Name']}",
                                    "Subject": "Logic App Failure",
                                    "To": "afischer@envistacorp.com"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365-2']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Mail"
                            }
                        },
                        "Wait_For_Execution_Results": {
                            "actions": {
                                "Delay": {
                                    "runAfter": {
                                        "Get_Execution_Results": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Wait",
                                    "inputs": {
                                        "interval": {
                                            "count": 15,
                                            "unit": "Second"
                                        }
                                    }
                                },
                                "Get_Execution_Results": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://envista-sales-demo.sandbox.operations.dynamics.com",
                                            "clientId": "6177feb8-5dad-4385-bbd6-804efeb3476d",
                                            "secret": "CY68Q~tk3SbIUbnW4shRh1skk-IUa.VMnKe3ybHA",
                                            "tenant": "9d2a793f-db8c-4949-820c-34e31d66b3cd",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "body": {
                                            "executionId": "@body('Initiate_Package_Import')['value']"
                                        },
                                        "method": "POST",
                                        "uri": "https://envista-sales-demo.sandbox.operations.dynamics.com/data/DataManagementDefinitionGroups/Microsoft.Dynamics.DataEntities.GetExecutionSummaryStatus"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initiate_Package_Import": [
                                    "Succeeded"
                                ]
                            },
                            "expression": "@or(equals(body('Get_Execution_Results')?['value'], 'Succeeded'), equals(body('Get_Execution_Results')?['value'], 'PartiallySucceeded'), equals(body('Get_Execution_Results')?['value'], 'Canceled'), equals(body('Get_Execution_Results')?['value'], 'Failed'))",
                            "limit": {
                                "count": 240,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_1_name'))]",
                                "connectionName": "azureblob-1",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/azureblob"
                            },
                            "office365-2": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]",
                                "connectionName": "office365",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/office365"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_logic_7667_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_1_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_teams_1_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_queue_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('7667'))}/messages/head",
                                "queries": {
                                    "queueType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Post_message_in_a_chat_or_channel": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "messageBody": "<p>@{base64ToString(triggerBody()?['ContentData'])}</p>",
                                    "recipient": {
                                        "channelId": "19:LrW5dknR4vGlfHJ7B0mzGoObq1TljXnjbIpX7SO_KJU1@thread.tacv2",
                                        "groupId": "ff957ebb-44c1-4f15-a449-6437054c5cc6"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/beta/teams/conversation/message/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_1_name'))]",
                                "connectionName": "servicebus-1",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/servicebus"
                            },
                            "teams": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_teams_1_name'))]",
                                "connectionName": "teams-1",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/teams"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_PowerLCS_HandleLCSOperationCreate_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_commondataservice_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_office365_1_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_row_is_added": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "NotificationUrl": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['commondataservice']['connectionId']"
                                    }
                                },
                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent('https://orgd4ba8056.crm.dynamics.com'))}/tables/@{encodeURIComponent(encodeURIComponent('cre2c_lcsenvironmentoperations'))}/onnewitemswebhook",
                                "queries": {
                                    "scope": "Organization"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Send_an_email_(V2)": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "<p>LCS Operation Test</p>",
                                    "Importance": "Normal",
                                    "Subject": "LCS Operation Test",
                                    "To": "nclouse@envistacorp.com"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "commondataservice": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_commondataservice_name'))]",
                                "connectionName": "commondataservice",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/centralus/managedApis/commondataservice"
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_office365_1_name'))]",
                                "connectionName": "office365-1",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/centralus/managedApis/office365"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-07-01",
            "name": "[parameters('networkSecurityGroups_DrupalCommerce_nsg_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_DrupalCommerce_nsg_name'), 'SSH')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_DrupalCommerce_nsg_name'), 'HTTP')]"
            ],
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_DrupalCommerce_nsg_name'), 'SSH')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "HTTP",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_DrupalCommerce_nsg_name'), 'HTTP')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues/authorizationrules",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/7646/logic-7647')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/queues', parameters('namespaces_envistasalesbus_name'), '7646')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "rights": [
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/test/test')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_envistasalesbus_name'), 'test')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "isClientAffine": false,
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 1,
                "status": "Active",
                "enableBatchedOperations": true,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "forwardTo": "customerqueue"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/bidatalake')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/dynamics365-financeandoperations')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/synapsedemo')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/ax2d365fob143')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 5120,
                "enabledProtocols": "SMB"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/customerqueue')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {
                "metadata": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/flow48239f83caf304bjobtriggers00')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {
                "metadata": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/flow48239f83caf304b3d5a7d5d1215828flows')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/flow48239f83caf304bflowaccesskeys')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/flow48239f83caf304bflowruntimecontext')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/flow48239f83caf304bflows')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/flow48239f83caf304bflowsubscriptions')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/flow48239f83caf304bflowsubscriptionsummary')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_envistasalesdemodatalake_name'), '/default/flow48239f83caf304bjobdefinitions')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccounts_envistasalesdemodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_envistasalesdemodatalake_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_logic_7646_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_logic_7646_a_name'))]",
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_logic_7646_b_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_1_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_queue_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('7646'))}/messages/head",
                                "queries": {
                                    "queueType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "customProperties",
                                        "type": "object",
                                        "value": "@triggerBody()?['Properties']"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@decodeBase64(triggerBody()?['ContentData'])",
                                "schema": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Switch": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "cases": {
                                "Case_A": {
                                    "case": "A",
                                    "actions": {
                                        "logic-7646-a": {
                                            "runAfter": {},
                                            "type": "Workflow",
                                            "inputs": {
                                                "host": {
                                                    "triggerName": "manual",
                                                    "workflow": {
                                                        "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_logic_7646_a_name'))]"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "Case_B": {
                                    "case": "B",
                                    "actions": {
                                        "logic-7646-b": {
                                            "runAfter": {},
                                            "type": "Workflow",
                                            "inputs": {
                                                "host": {
                                                    "triggerName": "manual",
                                                    "workflow": {
                                                        "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_logic_7646_b_name'))]"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {
                                    "Failed": {
                                        "runAfter": {},
                                        "type": "Terminate",
                                        "inputs": {
                                            "runStatus": "Failed"
                                        }
                                    }
                                }
                            },
                            "expression": "@body('Parse_JSON')?['key']",
                            "type": "Switch"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_servicebus_1_name'))]",
                                "connectionName": "servicebus-1",
                                "id": "/subscriptions/5e1bf234-0efb-4cbd-b09b-44a56ce557b3/providers/Microsoft.Web/locations/eastus/managedApis/servicebus"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-07-01",
            "name": "[parameters('networkInterfaces_drupalcommerce9_z1_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_DrupalCommerce_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_tech_sales_rg_vnet_name'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_DrupalCommerce_nsg_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_drupalcommerce9_z1_name')), '/ipConfigurations/ipconfig1')]",
                        "etag": "W/\"84036408-4cf4-4065-9361-36fab27dbbba\"",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.1.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "name": "DrupalCommerce-ip",
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_DrupalCommerce_ip_name'))]",
                                "properties": {
                                    "provisioningState": "Succeeded",
                                    "resourceGuid": "f8c4afb2-add2-42ea-9a99-e808c1aba05d",
                                    "publicIPAddressVersion": "IPv4",
                                    "publicIPAllocationMethod": "Dynamic",
                                    "idleTimeoutInMinutes": 4,
                                    "ipTags": [],
                                    "ipConfiguration": {
                                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_drupalcommerce9_z1_name')), '/ipConfigurations/ipconfig1')]"
                                    },
                                    "deleteOption": "Delete"
                                },
                                "type": "Microsoft.Network/publicIPAddresses",
                                "sku": {
                                    "name": "Basic",
                                    "tier": "Regional"
                                }
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_tech_sales_rg_vnet_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_DrupalCommerce_nsg_name'))]"
                },
                "nicType": "Standard"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('namespaces_envistasalesbus_name'), '/test/test/$Default')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_envistasalesbus_name'), 'test', 'test')]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_envistasalesbus_name'), 'test')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_envistasalesbus_name'))]"
            ],
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1",
                    "compatibilityLevel": 20
                }
            }
        }
    ]
}